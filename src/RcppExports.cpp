// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// getMatrixFore
arma::mat getMatrixFore(const arma::vec& f, const int& k2, const int& h);
RcppExport SEXP odpc_getMatrixFore(SEXP fSEXP, SEXP k2SEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type f(fSEXP);
    Rcpp::traits::input_parameter< const int& >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< const int& >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(getMatrixFore(f, k2, h));
    return rcpp_result_gen;
END_RCPP
}
// getMatrixFitted
arma::mat getMatrixFitted(const arma::vec& f, const int& k1, const int& k2);
RcppExport SEXP odpc_getMatrixFitted(SEXP fSEXP, SEXP k1SEXP, SEXP k2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type f(fSEXP);
    Rcpp::traits::input_parameter< const int& >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< const int& >::type k2(k2SEXP);
    rcpp_result_gen = Rcpp::wrap(getMatrixFitted(f, k1, k2));
    return rcpp_result_gen;
END_RCPP
}
// getFini_forecast
arma::mat getFini_forecast(const arma::mat& Z, const int& k1, const int& k2, const int& k_tot);
RcppExport SEXP odpc_getFini_forecast(SEXP ZSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP k_totSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int& >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< const int& >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< const int& >::type k_tot(k_totSEXP);
    rcpp_result_gen = Rcpp::wrap(getFini_forecast(Z, k1, k2, k_tot));
    return rcpp_result_gen;
END_RCPP
}
// getMSE
double getMSE(const arma::mat& Z2k, const arma::mat& Fitted);
RcppExport SEXP odpc_getMSE(SEXP Z2kSEXP, SEXP FittedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Z2k(Z2kSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Fitted(FittedSEXP);
    rcpp_result_gen = Rcpp::wrap(getMSE(Z2k, Fitted));
    return rcpp_result_gen;
END_RCPP
}
// odpc_priv
List odpc_priv(const arma::mat& Z, const int& k1, const int& k2, const arma::vec& f_ini, const bool& passf_ini, const double& tol, const int& niter_max, const int& method);
RcppExport SEXP odpc_odpc_priv(SEXP ZSEXP, SEXP k1SEXP, SEXP k2SEXP, SEXP f_iniSEXP, SEXP passf_iniSEXP, SEXP tolSEXP, SEXP niter_maxSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const int& >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< const int& >::type k2(k2SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type f_ini(f_iniSEXP);
    Rcpp::traits::input_parameter< const bool& >::type passf_ini(passf_iniSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int& >::type niter_max(niter_maxSEXP);
    Rcpp::traits::input_parameter< const int& >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(odpc_priv(Z, k1, k2, f_ini, passf_ini, tol, niter_max, method));
    return rcpp_result_gen;
END_RCPP
}
